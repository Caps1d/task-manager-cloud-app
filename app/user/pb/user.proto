syntax = "proto3";

package user;

option go_package = "./user/pb";


service UserService {
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
    rpc CreateTeam(CreateTeamRequest) returns (CreateTeamResponse) {}
    rpc GetTeam(GetTeamRequest) returns (GetTeamResponse) {}
    rpc UpdateTeam(UpdateTeamRequest) returns (UpdateTeamResponse) {}
    rpc DeleteTeam(DeleteTeamRequest) returns (DeleteTeamResponse) {}
}

// Register
message RegisterRequest {
    string email = 1;
    string name = 2;
    string username = 3;
}

message RegisterResponse {
    bool success = 1;
}

// GetUser
message GetUser {
    int32 id = 1;
    string name = 2;
    string email = 3;
    string username = 4;
}

message GetUserRequest {
    int32 id = 1;
}

message GetUserResponse {
    GetUser data = 1;
}

// UpdateUser
message UpdateUserRequest {
    int32 userID = 1;
    optional string email  = 2;
    optional string role = 3;
    optional int32 teamID = 4;
}

message UpdateUserResponse {
    bool success = 1;
}

// GetTeam
message Member {
    int32 id = 1;
    string name = 2;
    string email = 3;
    string username = 4;
    string role = 5;
}

message Team {
    int32 id = 1;
    string name = 2;
    string manager = 3;
    repeated Member members = 4;

}

message GetTeamRequest {
    int32 id = 1;
}

message GetTeamResponse {
    Team team = 1;
}

// CreateTeam
message CreateTeamRequest {
    string name = 1;
    string manager = 2;
}

message CreateTeamResponse {
    int32 id = 1;
    bool success = 2;
}

// UpdateTeam
message UpdateTeamRequest {
    int32 id = 1;
    optional string name = 2;
    optional string manager = 3;
    optional int32 userId = 4;
    optional string role = 5;
}

message UpdateTeamResponse {
    bool success = 1;
}

// DeleteTeam
message DeleteTeamRequest {
    int32 id = 1;
}

message DeleteTeamResponse {
    bool success = 2;
}
